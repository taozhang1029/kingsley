import{_ as e,r as p,o,c,a as n,b as a,d as t,e as l}from"./app-C8q1F3U4.js";const i="/blog/assets/Drools-CKJ7Ds7v.png",u="/blog/assets/img-XUGtJgP0.png",r={},d=n("h1",{id:"drools实战",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#drools实战"},[n("span",null,"Drools实战")])],-1),k=n("h2",{id:"一、drools简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、drools简介"},[n("span",null,"一、Drools简介")])],-1),v=n("p",null,"Drools 是一款由JBoss组织提供的基于 Java 语言编写的开源规则引擎，可以将复杂且多变的业务规则从硬编码中解放出来，以规则脚本的形式存放在文件或特定的存储介质中（例如存放在数据库中），使用 Rete 算法对所编写的规则求值。",-1),m={href:"https://drools.org/",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),b={href:"https://github.com/kiegroup/drools",target:"_blank",rel:"noopener noreferrer"},h=l(`<p>Drools 被分为两个主要的部分：编译和运行时。编译是将规则描述文件按 ANTLR 3 语法进行解析，对语法进行正确性的检查，然后产生一种中间结构“descr”，descr 用 AST 来描述规则。目前，Drools 支持四种规则描述文件，分别是：drl 文件、 xls 文件、brl 文件和 dsl 文件，其中，常用的描述文件是 drl 文件和 xls 文件，而 xls 文件更易于维护，更直观，更为被业务人员所理解。运行时是将 AST传到 PackageBuilder，由 PackagBuilder来产生 RuleBase，它包含了一个或多个 Package 对象。</p><h2 id="二、drools快速入门" tabindex="-1"><a class="header-anchor" href="#二、drools快速入门"><span>二、Drools快速入门</span></a></h2><p>在项目中使用Drools时，既可以单独使用，也可以整合Spring使用。如果单独使用只需要导入如下maven坐标即可：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.drools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>drools-compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 最新版本 8.41.0.Final, 8.x 需要java 55版本，即jdk11 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${drools-version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Drools API开发步骤如下：</p><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TD<span class="token punctuation">;</span>
获取KieServices <span class="token arrow operator">--&gt;</span> 获取KieContainer<span class="token punctuation">;</span>
获取KieContainer <span class="token arrow operator">--&gt;</span> KieSession<span class="token punctuation">;</span>
KieSession <span class="token arrow operator">--&gt;</span> Insert_fact<span class="token punctuation">;</span>
Insert_fact <span class="token arrow operator">--&gt;</span> 触发规则<span class="token punctuation">;</span>
触发规则 <span class="token arrow operator">--&gt;</span> 关闭KieSession<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速入门案例：</p><p>1、创建maven工程，导入 drools-compiler 依赖，本案例中使用 7.32.0.Final</p><p>2、在recourse目录下新建 META-INF 目录，创建 kmodule.xml 文件（即 recourse/META-INF/kmodule.xml）</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kmodule</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.drools.org/xsd/kmodule<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--
        name: 指定kbase的名称，可以任意，但是需要唯一
        packages: 指定规则文件的目录，需要根据实际的项目结构来指定，否则无法加载到对应的规则文件
        default: 指定kbase的默认值，true表示默认，false表示非默认
    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbase</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kbase1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">packages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--
            name: 指定session的名称，可以任意，但是需要唯一
            ksession: 指定session是否为默认
        --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ksession</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ksession-rule<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbase</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kmodule</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、在recourse目录下新建 rules 目录，创建一个 bookDiscount.drl 规则文件</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// package 后面的只是个逻辑概念，不是一定与规则文件所在目录相同，甚至可以写成abc</span>
<span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>

<span class="token comment">// 引入用于Java与Drools通信的实体</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Order</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>

dialect  <span class="token string">&quot;mvel&quot;</span>

<span class="token comment">// 规则名可以任意，只要多个规则之间唯一即可</span>
<span class="token comment">// 所购图书总价在100元以下的没有优惠</span>
rule <span class="token string">&quot;bookDiscount1&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">// 模式匹配，到规则引擎中（工作内存）查找满足条件的Order对象，赋值给$order（固定写法）</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则1，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $order<span class="token punctuation">.</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
end

<span class="token comment">// 所购图书总价在100元-200元之间，优惠20元</span>
rule <span class="token string">&quot;bookDiscount2&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// 模式匹配，到规则引擎中（工作内存）查找满足条件的Order对象，赋值给$order（固定写法）</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则2，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $order<span class="token punctuation">.</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
end

<span class="token comment">// 所购图书总价在200元-300元之间，优惠50元</span>
rule <span class="token string">&quot;bookDiscount3&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment">// 模式匹配，到规则引擎中（工作内存）查找满足条件的Order对象，赋值给$order（固定写法）</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则3，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $order<span class="token punctuation">.</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
end


<span class="token comment">// 所购图书总价在300元以上，优惠100元</span>
rule <span class="token string">&quot;bookDiscount4&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment">// 模式匹配，到规则引擎中（工作内存）查找满足条件的Order对象，赋值给$order（固定写法）</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则4，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $order<span class="token punctuation">.</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
end

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、编写测试代码，这里使用junit单元测试</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieServices</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 图书优惠Drools单元测试
 *
 * <span class="token keyword">@author</span> kingsley
 * <span class="token keyword">@date</span> 2024/1/23 00:42
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BookDiscountTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMatchRule1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">commonest</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMatchRule2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">commonest</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMatchRule3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">commonest</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMatchRule4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">commonest</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">TEN</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">commonest</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> originalPrice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取KieServices</span>
        <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取KieContainer容器对象</span>
        <span class="token class-name">KieContainer</span> kieContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从容器中获取默认Session对象，kmodule.xml 配置的 ksession-rule 设置成了默认，所以使用无参方法能获取到这个默认session</span>
        <span class="token class-name">KieSession</span> session <span class="token operator">=</span> kieContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建fact对象</span>
        <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order<span class="token punctuation">.</span><span class="token function">setOriginalPrice</span><span class="token punctuation">(</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// insert fact</span>
        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 触发（激活）规则，由Drools框架自动进行规则匹配，如果规则匹配成功则执行规则中配置的逻辑</span>
        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 关闭session</span>
        session<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;优惠后的实际价格为：&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getActualPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、drools规则引擎的构成" tabindex="-1"><a class="header-anchor" href="#三、drools规则引擎的构成"><span>三、Drools规则引擎的构成</span></a></h2><p>Drools规则引擎由三部分构成：</p><ol><li><strong>Working Memory(工作内存)</strong>： drools会从Working Memory中获取数据并和规则文件中定义的规则进行匹配，所以我们开发的应用程序只需要将我们的数据插入到Working Memory中， 例如在测试代码中，我们通过session.insert(order)方法将Order对象插入到Working Memory中。</li><li><strong>Rule Base(规则库)</strong>：我们在规则文件中定义的规则都会被加载到规则库中</li><li><strong>Inference Engine(推理引擎)</strong></li></ol><p>其中Inference Engine又包括三部分：</p><ol><li><strong>Pattern Matcher(匹配器)</strong>：将Rule Base中的规则和Working Memory中的数据（也称为Fact）进行匹配，如果匹配成功，则将匹配到的规则加入到Agenda中</li><li><strong>Agenda</strong>(议程)：用于存放通过Pattern Matcher匹配到的规则</li><li><strong>Execution Engine(执行引擎)</strong>：执行引擎会从议程中取出匹配到的规则，并执行规则中的then部分的逻辑</li></ol><blockquote><p>Fact：事实，是规则引擎中数据的载体，通常是一个对象，是业务代码与规则引擎之间的桥梁，规则引擎通过Fact来获取数据，然后通过规则来处理Fact。</p></blockquote><p>如下是Drools规则引擎的结构图：</p><p><img src="`+i+`" alt="Drools规则引擎的结构图"></p><p>规则引擎执行过程：</p><ol><li>将初始数据Fact插入到Working Memory中</li><li>使用Pattern Matcher匹配规则和Fact</li><li>如果执行规则存在冲突，即同时存在多个规则匹配到Fact，则将冲突的规则放入冲突集合</li><li>解决冲突，将激活的规则加入到Agenda中</li><li>执行Agenda中的规则，重复步骤2-5，直到执行完所有规则</li></ol><h2 id="四、drools基础语法" tabindex="-1"><a class="header-anchor" href="#四、drools基础语法"><span>四、Drools基础语法</span></a></h2><h3 id="_1、规则文件构成" tabindex="-1"><a class="header-anchor" href="#_1、规则文件构成"><span>1、规则文件构成</span></a></h3><p>在使用Drools时，非常重要的一个工作就是编写规则文件，规则文件的后缀名通常为.drl，drl是Drools Rule Language的缩写，一套完整的Drools规则文件内容构成如下：</p><table><thead><tr><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>package</td><td>包名，只限于逻辑上的管理，同一包名下的查询或者函数可以直接调用</td></tr><tr><td>import</td><td>用于导入类或者静态方法</td></tr><tr><td>global</td><td>全局变量</td></tr><tr><td>function</td><td>自定义函数</td></tr><tr><td>query</td><td>查询</td></tr><tr><td>rule end</td><td>规则体的开始和结束标志符</td></tr></tbody></table><p>Drools支持的规则文件除了.drl外，还有Excel文件类型的</p><h3 id="_2、规则体语法结构" tabindex="-1"><a class="header-anchor" href="#_2、规则体语法结构"><span>2、规则体语法结构</span></a></h3><p>规则体是Drools规则文件的重要部分，是进行业务规则判断、处理业务结果的部分，规则体语法结构如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>rule <span class="token string">&quot;规则名称&quot;</span>
    attributes
    when
        <span class="token constant">LHS</span>
    then
        <span class="token constant">RHS</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>rule</strong>：关键字，规则体的开始标志符，后面跟规则名称<br><strong>attributes</strong>：规则属性，是rule与when之间的参数，为可选项<br><strong>when</strong>：关键字，规则体的条件部分，用于判断规则是否生效，如果条件成立，则执行then部分的逻辑<br><strong>LHS</strong>（Left Hand Side）：左部条件，是when部分的条件，用于判断规则是否生效，它由零个或多个条件元素组成，如果LHS为空，则它将被视为true。如果条件成立，则执行then部分的逻辑<br><strong>then</strong>：关键字，规则体的处理部分，用于处理规则生效后的结果<br><strong>RHS</strong>（Right Hand Side）：是规则的后果或行动部分<br><strong>end</strong>：关键字，规则体的结束标志符，表示规则体的结束，必须与rule关键字配对使用</p><h3 id="_3、注释" tabindex="-1"><a class="header-anchor" href="#_3、注释"><span>3、注释</span></a></h3><p>Drools支持两种注释，一种是单行注释，另一种是多行注释，两种注释的语法与Java类中使用一致，如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 单行注释</span>
rule <span class="token string">&quot;rule1&quot;</span>
    when
    then
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end


<span class="token comment">/*
多行注释
*/</span>
rule <span class="token string">&quot;rule2&quot;</span>
    when
    then
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、pattern模式匹配" tabindex="-1"><a class="header-anchor" href="#_4、pattern模式匹配"><span>4、Pattern模式匹配</span></a></h3><p>Pattern模式匹配的语法如下：绑定变量名：Object(Field约束) 其中绑定变量名可以省略，通常绑定变量名的命名一版建议以$开头，如果定义了绑定变量名，那么在then部分的逻辑中就可以通过绑定变量名来操作对应的Fact对象。 Field约束部分是需要返回true或者false的0个或多个条件表达式。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 所购图书总价在200元-300元之间，优惠50元</span>
rule <span class="token string">&quot;bookDiscount3&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment">// 模式匹配，到规则引擎中（工作内存）查找满足条件的Order对象，赋值给$order（固定写法）</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则3，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $order<span class="token punctuation">.</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上面的例子我们可以知道<br> 1、工作内存中必须存在Order这种类型的Fact对象——类型约束<br> 2、Fact对象的originalPrice必须大于等于200元——属性约束<br> 3、Fact对象的originalPrice必须小于300元——属性约束<br> 以上条件必须同时满足，当前规则才有可能被激活</p><p><strong>绑定变量即可用在对象上，也可以用在对象的属性上</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 所购图书总价在200元-300元之间，优惠50元</span>
rule <span class="token string">&quot;bookDiscount3&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>$op<span class="token operator">:</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> 
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则3，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $op<span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>LHS部分还可以定义多个Pattern模式匹配，多个Pattern模式匹配可以使用逻辑运算符 and 或者 or 进行连接，也可以不写，默认是and。</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 所购图书总价在200元-300元之间，优惠50元</span>
rule <span class="token string">&quot;bookDiscount3&quot;</span>
    when
        $order<span class="token operator">:</span><span class="token class-name">Order</span><span class="token punctuation">(</span>$op<span class="token operator">:</span>originalPrice <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> originalPrice <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> and
        $customer<span class="token operator">:</span><span class="token class-name">Customer</span><span class="token punctuation">(</span>age <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token operator">&amp;&amp;</span> gender <span class="token operator">==</span> <span class="token char">&#39;male&#39;</span><span class="token punctuation">)</span>
    then
        $order<span class="token punctuation">.</span><span class="token function">setActualPrice</span><span class="token punctuation">(</span>$order<span class="token punctuation">.</span><span class="token function">getOriginalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;命中规则3，图书的原始价格为: &quot;</span> <span class="token operator">+</span> $op<span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、比较操作符" tabindex="-1"><a class="header-anchor" href="#_5、比较操作符"><span>5、比较操作符</span></a></h3><p>Drools支持的比较操作符如下：</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>contains</td><td>检查Fact对象的属性值是否包含指定的值</td></tr><tr><td>not contains</td><td>检查Fact对象的属性值是否不包含指定的值</td></tr><tr><td>memberOf</td><td>检查Fact对象的属性值是否在一个或多个集合中</td></tr><tr><td>not memberOf</td><td>检查Fact对象的属性值是否不在一个或多个集合中</td></tr><tr><td>matches</td><td>检查Fact对象的属性值是否与提供的标准Java正则表达式匹配</td></tr><tr><td>not matches</td><td>检查Fact对象的属性值是否与提供的标准Java正则表达式不匹配</td></tr></tbody></table><p>语法：前6个操作符和Java的比较操作符一致</p><ul><li><p><strong>contains</strong> ｜ <strong>not contains</strong> 语法结构<br> Object(Field[Collection/Array] contains value) Object(Field[Collection/Array] not contains value)</p></li><li><p><strong>memberOf</strong> ｜ <strong>not memberOf</strong> 语法结构<br> Object(Field memberOf value[Collection/Array]) Object(Field not memberOf value[Collection/Array])</p></li><li><p><strong>matches</strong> ｜ <strong>not matches</strong> 语法结构<br> Object(Field matches &quot;正则表达式&quot;) Object(Field not matches &quot;正则表达式&quot;)</p></li></ul><h3 id="_6、执行指定规则" tabindex="-1"><a class="header-anchor" href="#_6、执行指定规则"><span>6、执行指定规则</span></a></h3><p>使用Drools框架提供的规则过滤器，可以只执行指定的规则，不执行其他规则。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * Fire all Matches on the Agenda
     *
     * <span class="token keyword">@param</span> <span class="token parameter">agendaFilter</span> filters the Matches that may fire
     * <span class="token keyword">@return</span> returns the number of rules fired
     */</span>
    <span class="token keyword">int</span> <span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token class-name">AgendaFilter</span> agendaFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="img.png"></p><h3 id="_7、关键字" tabindex="-1"><a class="header-anchor" href="#_7、关键字"><span>7、关键字</span></a></h3><p>Drools的关键字分为：硬关键字和软关键字。 <strong>硬关键字</strong>：硬关键字是我们在规则文件中 定义包名 或者 规则名 时明确不能使用的，硬关键字一旦使用，编译器会报错。 <strong>软关键字</strong>：软关键字虽然可以使用的，但是不建议使用。 硬关键字包括：true、false、null 软关键字包括：lock-on-active、date-effective、date-expires、no-loop、auto-focus、activation-group、agenda-group、entry-point、duration、 package、import、dialect、salience、enabled、attributes、rule、extend、when、then、template、query、declare、function、global、 eval、not、in、or、and、exists、forall、accumulate、from、collect、action、reverse、result、end、over、init</p><h3 id="_8、drools内置方法" tabindex="-1"><a class="header-anchor" href="#_8、drools内置方法"><span>8、Drools内置方法</span></a></h3><p>规则文件的RHS部分的主要作用是通过插入、更新、删除操作工作内存中的Fact对象，来达到控制规则引擎执行的目的。Drools提供了一些内置的方法，可以使用这些内置方法来操作工作内存中的Fact对象。 操作完成后，规则引擎会重新进行相关规则的匹配，原来没有匹配成功的规则在我们修改数据完成后可能会匹配成功。 Drools内置的方法有：</p><ul><li>update</li><li>insert</li><li>retract</li></ul><p>a. <strong>update</strong>的作用是更新工作内存中的Fact对象。</p><p>定义Fact实体</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kingsley
 * <span class="token keyword">@date</span> 2024/2/21 23:08
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> age <span class="token operator">+</span> <span class="token string">&quot;的学生&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单元测试代码</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">After</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Before</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">KieServices</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>api<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">KieSession</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kingsley
 * <span class="token keyword">@date</span> 2024/2/21 23:13
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">protected</span> <span class="token class-name">KieSession</span> session<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Before</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取KieServices</span>
        <span class="token class-name">KieServices</span> kieServices <span class="token operator">=</span> <span class="token class-name">KieServices</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取KieContainer容器对象</span>
        <span class="token class-name">KieContainer</span> kieContainer <span class="token operator">=</span> kieServices<span class="token punctuation">.</span><span class="token function">newKieClasspathContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从容器中获取默认Session对象，kmodule.xml 配置的 ksession-rule 设置成了默认，所以使用无参方法能获取到这个默认session</span>
        session <span class="token operator">=</span> kieContainer<span class="token punctuation">.</span><span class="token function">newKieSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@After</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">tearDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">///////////////////////////////////////</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>drools</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>core<span class="token punctuation">.</span>base<span class="token punctuation">.</span></span><span class="token class-name">RuleNameStartsWithAgendaFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 内置方法单元测试
 *
 * <span class="token keyword">@author</span> kingsley
 * <span class="token keyword">@date</span> 2024/2/21 23:13
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InnerMethodTest</span> <span class="token keyword">extends</span> <span class="token class-name">BaseTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdateInnerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuleNameStartsWithAgendaFilter</span><span class="token punctuation">(</span><span class="token string">&quot;updateInnerMethod&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>调用set方法更新fact对象的情况<br> 规则文件 updateInnerMethod.drl</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>

rule <span class="token string">&quot;updateInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule updateInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age大于10岁并且小于20岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;updateInnerMethod-要求Student的age小于等于10岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    then
        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule updateInnerMethod-要求Student的age小于等于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于等于10岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><blockquote><p>2024-02-22 00:02:08.406 INFO rule updateInnerMethod-要求Student的age小于等于10岁 : 规则【要求Student的age小于等于10岁】触发了...</p></blockquote><p><span style="color:red;">说明调用set方法修改Fact对象的属性不会触发规则的重新匹配</span></p></li><li><p>调用update内置方法更新fact对象的情况 修改规则文件——添加update($s)</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>

rule <span class="token string">&quot;updateInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule updateInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age大于10岁并且小于20岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;updateInnerMethod-要求Student的age小于等于10岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    then
        $s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">update</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span>
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule updateInnerMethod-要求Student的age小于等于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于等于10岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果</p><blockquote><p>2024-02-22 00:02:36.555 INFO rule updateInnerMethod-要求Student的age小于等于10岁 : 规则【要求Student的age小于等于10岁】触发了... 2024-02-22 00:02:36.565 INFO rule updateInnerMethod-要求Student的age大于10岁并且小于20岁 : 规则【要求Student的age大于10岁并且小于20岁】触发了...</p></blockquote></li></ol><p><span style="color:red;">说明调用内置方法update会触发规则的重新匹配，<strong>并且与update方法的调用位置无关</strong></span></p><p>需要注意的是：<strong>如果调用update内置方法更新Fact对象的字段不恰当，可能会引起程序陷入死循环</strong></p><p>b. <strong>insert</strong>的作用是将一个Fact对象插入到工作内存中，并让相关的规则重新匹配。</p><ol><li>定义规则文件insertInnerMethod.drl</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

rule <span class="token string">&quot;insertInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule insertInnerMethod-要求Student的age大于10岁并且小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age大于10岁并且小于20岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;insertInnerMethod-要求Student的age小于等于10岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Student</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule insertInnerMethod-要求Student的age小于等于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于等于10岁】触发了... 并且通过内置方法insert了一个15岁的Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>执行单元测试</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertInnerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuleNameStartsWithAgendaFilter</span><span class="token punctuation">(</span><span class="token string">&quot;insertInnerMethod&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>执行结果</li></ol><blockquote><p>2024-02-22 00:10:54.515 INFO rule insertInnerMethod-要求Student的age小于等于10岁 : 规则【要求Student的age小于等于10岁】触发了... 并且通过内置方法insert了一个15岁的Student<br> 2024-02-22 00:10:54.519 INFO rule insertInnerMethod-要求Student的age大于10岁并且小于20岁 : 规则【要求Student的age大于10岁并且小于20岁】触发了...</p></blockquote><p><span style="color:red;">说明调用内置方法insert会覆盖已经存在的Fact对象，触发规则的重新匹配</span></p><p>c. <strong>retract</strong>的作用是将一个Fact对象从工作内存中移除</p><ol><li>定义规则文件 retractInnerMethod.drl</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于10岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于10岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token function">retract</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>执行单元测试</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testRetractInnerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">fireAllRules</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuleNameStartsWithAgendaFilter</span><span class="token punctuation">(</span><span class="token string">&quot;retractInnerMethod&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>执行结果</li></ol><blockquote><p>2024-02-22 00:23:31.252 INFO rule retractInnerMethod-要求Student的age小于10岁 : 规则【要求Student的age小于10岁】触发了... 2024-02-22 00:23:31.264 INFO rule retractInnerMethod-要求Student的age小于20岁 : 规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student</p></blockquote><hr><ol><li>如果调整删除Fact对象的位置</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token function">retract</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于10岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于10岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>执行结果会变成</li></ol><blockquote><p>2024-02-22 00:28:08.894 INFO rule retractInnerMethod-要求Student的age小于20岁 : 规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student</p></blockquote><p>这是因为Drools默认是按照drl文件中的顺序执行规则，所以当执行retract方法时，执行到【retractInnerMethod-要求Student的age小于10岁】时已经没有Student对象了，所以规则不会触发。 可以通过 salience 属性来配置规则的优先级，Drools默认规则的优先级是0，salience 属性的值越大，优先级越高，规则的执行顺序就靠前。</p><hr><p>如果设置规则的优先级</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">rules</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>kingsley<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Student</span>
dialect  <span class="token string">&quot;mvel&quot;</span>

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于20岁&quot;</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
    then
        <span class="token function">retract</span><span class="token punctuation">(</span>$s<span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于20岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end

rule <span class="token string">&quot;retractInnerMethod-要求Student的age小于10岁&quot;</span>
    salience <span class="token number">10</span>
    when
        $s <span class="token operator">:</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>age<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span>
    then
        <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;rule retractInnerMethod-要求Student的age小于10岁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;规则【要求Student的age小于10岁】触发了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则执行结果会变成</p><blockquote><p>2024-02-22 00:34:47.903 INFO rule retractInnerMethod-要求Student的age小于10岁 : 规则【要求Student的age小于10岁】触发了...<br> 2024-02-22 00:34:47.908 INFO rule retractInnerMethod-要求Student的age小于20岁 : 规则【要求Student的age小于20岁】触发了... 并且通过内置方法retract删除了Student</p></blockquote><p>因为【retractInnerMethod-要求Student的age小于10岁】的优先级10比【retractInnerMethod-要求Student的age小于20岁】的0高， 所以会先触发【retractInnerMethod-要求Student的age小于10岁】， 然后才触发【retractInnerMethod-要求Student的age小于20岁】。</p><p><span style="color:red;">说明调用内置方法retract会将一个Fact对象从工作内存中移除，会影响优先级更低的规则的命中</span></p><h2 id="五、规则属性" tabindex="-1"><a class="header-anchor" href="#五、规则属性"><span>五、规则属性</span></a></h2><p>前面我们已经知道了Drools规则体的构成如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>rule &quot;规则名称&quot;
    attributes
    when
        LHS
    then
        RHS
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>attributes即为规则属性，本章节将介绍Drools部分规则属性的使用。</p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>salience</td><td>指定规则的优先级</td></tr><tr><td>dialect</td><td>指定规则使用的语言类型，取值为：mvel、java</td></tr><tr><td>enabled</td><td>指定规则是否启用，默认值为true</td></tr><tr><td>date-effective</td><td>指定规则生效时间</td></tr><tr><td>date-expires</td><td>指定规则失效时间</td></tr><tr><td>no-loop</td><td>防止死循环</td></tr><tr><td>auto-focus</td><td>自动聚焦，一般结合agenda-group使用</td></tr><tr><td>agenda-group</td><td>议程分组，只有获取焦点的规则才有可能触发</td></tr><tr><td>activation-group</td><td>激活分组，具有相同分组名称的规则只能有一个规则触发</td></tr><tr><td>timer</td><td>定时器，用于指定规则触发的时间间隔</td></tr></tbody></table><h4 id="_1、enabled属性" tabindex="-1"><a class="header-anchor" href="#_1、enabled属性"><span>1、enabled属性</span></a></h4>`,100);function f(y,q){const s=p("ExternalLinkIcon");return o(),c("div",null,[d,k,v,n("p",null,[n("a",m,[a("Drools官网"),t(s)]),g,n("a",b,[a("Drools源码"),t(s)])]),h])}const w=e(r,[["render",f],["__file","Drools.html.vue"]]),j=JSON.parse('{"path":"/back-end/rule-engine/Drools.html","title":"Drools实战","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、Drools简介","slug":"一、drools简介","link":"#一、drools简介","children":[]},{"level":2,"title":"二、Drools快速入门","slug":"二、drools快速入门","link":"#二、drools快速入门","children":[]},{"level":2,"title":"三、Drools规则引擎的构成","slug":"三、drools规则引擎的构成","link":"#三、drools规则引擎的构成","children":[]},{"level":2,"title":"四、Drools基础语法","slug":"四、drools基础语法","link":"#四、drools基础语法","children":[{"level":3,"title":"1、规则文件构成","slug":"_1、规则文件构成","link":"#_1、规则文件构成","children":[]},{"level":3,"title":"2、规则体语法结构","slug":"_2、规则体语法结构","link":"#_2、规则体语法结构","children":[]},{"level":3,"title":"3、注释","slug":"_3、注释","link":"#_3、注释","children":[]},{"level":3,"title":"4、Pattern模式匹配","slug":"_4、pattern模式匹配","link":"#_4、pattern模式匹配","children":[]},{"level":3,"title":"5、比较操作符","slug":"_5、比较操作符","link":"#_5、比较操作符","children":[]},{"level":3,"title":"6、执行指定规则","slug":"_6、执行指定规则","link":"#_6、执行指定规则","children":[]},{"level":3,"title":"7、关键字","slug":"_7、关键字","link":"#_7、关键字","children":[]},{"level":3,"title":"8、Drools内置方法","slug":"_8、drools内置方法","link":"#_8、drools内置方法","children":[]}]},{"level":2,"title":"五、规则属性","slug":"五、规则属性","link":"#五、规则属性","children":[]}],"git":{"updatedTime":1711124190000},"filePathRelative":"back-end/rule-engine/Drools.md"}');export{w as comp,j as data};
